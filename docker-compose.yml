version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: clpm-postgres
    environment:
      POSTGRES_DB: clpm
      POSTGRES_USER: clpm
      POSTGRES_PASSWORD: clpm_pwd
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U clpm -d clpm"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - clpm-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: clpm-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - clpm-network

  # Keycloak Auth
  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: clpm-keycloak
    command: start-dev --http-port=8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - clpm-network

  # Aggregation Service
  aggregation:
    build:
      context: ./backend/aggregation
      dockerfile: Dockerfile
    container_name: clpm-aggregation
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=clpm
      - DB_USER=clpm
      - DB_PASSWORD=clpm_pwd
      - DATABASE_URL=postgresql://clpm:clpm_pwd@postgres:5432/clpm
      - INFLUXDB_URL=http://72.255.34.69:8086/
      - INFLUXDB_TOKEN=4eYvsu8wZCJ6tKuE2sxvFHkvYFwSMVK0011hEEiojvejzpSaij86vYQomN_12au6eK-2MZ6Knr-Sax201y70w==
      - INFLUXDB_ORG=some_org
      - INFLUXDB_BUCKET=some_data
      - INFLUXDB_MEASUREMENT=control_loops
      - LOG_LEVEL=info
      - POLLING_INTERVAL=30000
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - clpm-network

  # KPI Worker
  kpi-worker:
    build:
      context: ./backend/kpi-worker
      dockerfile: Dockerfile
    container_name: clpm-kpi-worker
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=clpm
      - DB_USER=clpm
      - DB_PASSWORD=clpm_pwd
      - DATABASE_URL=postgresql://clpm:clpm_pwd@postgres:5432/clpm
      - INFLUXDB_URL=http://72.255.34.69:8086/
      - INFLUXDB_TOKEN=4eYvsu8wZCJ6tKuE2sxvFHkvYFwSMVK0011hEEiojvejzpSaij86vYQomN_12au6eK-2MZ6Knr-Sax201y70w==
      - INFLUXDB_ORG=some_org
      - INFLUXDB_BUCKET=some_data
      - INFLUXDB_MEASUREMENT=control_loops
      - KPI_WINDOW_MIN=15
      - KPI_CRON_SCHEDULE=*/15 * * * *
      - KPI_MAX_CONCURRENCY=5
      - LOG_LEVEL=info
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - clpm-network

  # API Gateway
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
      target: production
    container_name: clpm-api-gateway
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=clpm
      - DB_USER=clpm
      - DB_PASSWORD=clpm_pwd
      - DATABASE_URL=postgresql://clpm:clpm_pwd@postgres:5432/clpm
      - REDIS_URL=redis://redis:6379/0
      - OIDC_ISSUER=http://keycloak:8080/realms/clpm
      - OIDC_AUDIENCE=clpm-api
      - OIDC_JWKS_URI=http://keycloak:8080/realms/clpm/protocol/openid-connect/certs
      - DIAG_SERVICE_URL=http://diagnostics:8050
      - API_PORT=8080
      - INFLUXDB_URL=http://72.255.34.69:8086/
      - INFLUXDB_TOKEN=4eYvsu8wZCJ6tKuE2sxvFHkvYFwSMVK0011hEEiojvejzpSaij86vYQomN_12au6eK-2MZ6Knr-Sax201y70w==
      - INFLUXDB_ORG=some_org
      - INFLUXDB_BUCKET=some_data
      - INFLUXDB_MEASUREMENT=control_loops
      - NODE_ENV=production
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - clpm-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: clpm-frontend
    environment:
      - VITE_API_BASE=http://localhost:8080/api/v1
      - VITE_OIDC_ISSUER=http://localhost:8081/realms/clpm
    ports:
      - "80:80"
    depends_on:
      - api-gateway
    restart: unless-stopped
    networks:
      - clpm-network

  # Python Diagnostics Service
  diagnostics:
    build:
      context: ./python-services/diagnostics_service
      dockerfile: Dockerfile
    container_name: clpm-diagnostics
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=clpm
      - DB_USER=clpm
      - DB_PASSWORD=clpm_pwd
      - DATABASE_URL=postgresql://clpm:clpm_pwd@postgres:5432/clpm
    ports:
      - "8050:8050"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - clpm-network

volumes:
  postgres_data:
    driver: local

networks:
  clpm-network:
    driver: bridge
