services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: clpm-postgres
    environment:
      POSTGRES_DB: clpm
      POSTGRES_USER: clpm
      POSTGRES_PASSWORD: clpm_pwd
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U clpm -d clpm"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - clpm-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: clpm-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - clpm-network

  # InfluxDB Time Series Database
  influxdb:
    image: influxdb:2.7
    container_name: clpm-influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=clpm
      - DOCKER_INFLUXDB_INIT_BUCKET=clpm_data
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=o6cjAfkS_jFCvEePxDyz33zMQaJgbbSz_oqkSPzMTbROImhLlwDHwh8la4VMkMyNJsHWrVYs_JEHpWZGtFeaDw==
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - clpm-network

  # Keycloak Auth
  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: clpm-keycloak
    command: start-dev --http-port=8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - clpm-network

  # Aggregation Service
  aggregation:
    build:
      context: ./backend/aggregation
      dockerfile: Dockerfile
    container_name: clpm-aggregation
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=clpm
      - DB_USER=clpm
      - DB_PASSWORD=clpm_pwd
      - DATABASE_URL=postgresql://clpm:clpm_pwd@postgres:5432/clpm
      - INFLUXDB_URL=http://influxdb:8086/
      - INFLUXDB_TOKEN=o6cjAfkS_jFCvEePxDyz33zMQaJgbbSz_oqkSPzMTbROImhLlwDHwh8la4VMkMyNJsHWrVYs_JEHpWZGtFeaDw==
      - INFLUXDB_ORG=clpm
      - INFLUXDB_BUCKET=clpm_data
      - INFLUXDB_MEASUREMENT=control_loops
      - LOG_LEVEL=info
      - POLLING_INTERVAL=30000
    depends_on:
      postgres:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - clpm-network

  # KPI Worker
  kpi-worker:
    build:
      context: ./backend/kpi-worker
      dockerfile: Dockerfile
    container_name: clpm-kpi-worker
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=clpm
      - DB_USER=clpm
      - DB_PASSWORD=clpm_pwd
      - DATABASE_URL=postgresql://clpm:clpm_pwd@postgres:5432/clpm
      - INFLUXDB_URL=http://influxdb:8086/
      - INFLUXDB_TOKEN=o6cjAfkS_jFCvEePxDyz33zMQaJgbbSz_oqkSPzMTbROImhLlwDHwh8la4VMkMyNJsHWrVYs_JEHpWZGtFeaDw==
      - INFLUXDB_ORG=clpm
      - INFLUXDB_BUCKET=clpm_data
      - INFLUXDB_MEASUREMENT=control_loops
      - KPI_WINDOW_MIN=15
      - KPI_CRON_SCHEDULE=*/15 * * * *
      - KPI_MAX_CONCURRENCY=5
      - LOG_LEVEL=info
    depends_on:
      postgres:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - clpm-network

  # API Gateway
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
      target: production
    container_name: clpm-api-gateway
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=clpm
      - DB_USER=clpm
      - DB_PASSWORD=clpm_pwd
      - DATABASE_URL=postgresql://clpm:clpm_pwd@postgres:5432/clpm
      - REDIS_URL=redis://redis:6379/0
      - OIDC_ISSUER=http://keycloak:8080/realms/clpm
      - OIDC_AUDIENCE=clpm-api
      - OIDC_JWKS_URI=http://keycloak:8080/realms/clpm/protocol/openid-connect/certs
      - DIAG_SERVICE_URL=http://diagnostics:8050
      - API_PORT=8080
      - INFLUXDB_URL=http://influxdb:8086/
      - INFLUXDB_TOKEN=o6cjAfkS_jFCvEePxDyz33zMQaJgbbSz_oqkSPzMTbROImhLlwDHwh8la4VMkMyNJsHWrVYs_JEHpWZGtFeaDw==
      - INFLUXDB_ORG=clpm
      - INFLUXDB_BUCKET=clpm_data
      - INFLUXDB_MEASUREMENT=control_loops
      - NODE_ENV=production
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      influxdb:
        condition: service_healthy
      diagnostics:
        condition: service_started
    restart: unless-stopped
    networks:
      - clpm-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: clpm-frontend
    environment:
      - VITE_API_BASE=http://localhost:8080/api/v1
      - VITE_OIDC_ISSUER=http://localhost:8081/realms/clpm
    ports:
      - "80:80"
    depends_on:
      api-gateway:
        condition: service_started
    restart: unless-stopped
    networks:
      - clpm-network

  # Python Diagnostics Service
  diagnostics:
    build:
      context: ./python-services/diagnostics_service
      dockerfile: Dockerfile
    container_name: clpm-diagnostics
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=clpm
      - DB_USER=clpm
      - DB_PASSWORD=clpm_pwd
      - DATABASE_URL=postgresql://clpm:clpm_pwd@postgres:5432/clpm
    ports:
      - "8050:8050"
    restart: unless-stopped
    networks:
      - clpm-network

  # Python Data Streaming Service
  data-streaming:
    build:
      context: ./python-services/data-streaming-service
      dockerfile: Dockerfile
    container_name: clpm-data-streaming
    environment:
      - INFLUXDB_URL=http://influxdb:8086/
      - INFLUXDB_TOKEN=o6cjAfkS_jFCvEePxDyz33zMQaJgbbSz_oqkSPzMTbROImhLlwDHwh8la4VMkMyNJsHWrVYs_JEHpWZGtFeaDw==
      - INFLUXDB_ORG=clpm
      - INFLUXDB_BUCKET=clpm_data
      - INFLUXDB_MEASUREMENT=control_loops
      - STREAM_INTERVAL=1.0
      - LOG_LEVEL=info
    depends_on:
      influxdb:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - clpm-network

  # pgAdmin for PostgreSQL Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: clpm-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@clpm.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - clpm-network

volumes:
  postgres_data:
    driver: local
  influxdb_data:
    driver: local

networks:
  clpm-network:
    driver: bridge
