version: '3.8'

services:
  # Database with production settings
  postgres:
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-clpm_pwd}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Redis with production settings
  redis:
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # Keycloak with production settings
  keycloak:
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # InfluxDB with production settings
  influxdb:
    environment:
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_PASSWORD:-adminpassword}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_TOKEN:-clpm-admin-token}
    volumes:
      - influxdb_data_prod:/var/lib/influxdb2
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  # Aggregation Service with production settings
  aggregation:
    environment:
      - DB_PASSWORD=${POSTGRES_PASSWORD:-clpm_pwd}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-clpm-admin-token}
      - LOG_LEVEL=info
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # KPI Worker with production settings
  kpi-worker:
    environment:
      - DB_PASSWORD=${POSTGRES_PASSWORD:-clpm_pwd}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-clpm-admin-token}
      - LOG_LEVEL=info
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # API Gateway with production settings
  api-gateway:
    environment:
      - DB_PASSWORD=${POSTGRES_PASSWORD:-clpm_pwd}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-clpm-admin-token}
      - NODE_ENV=production
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # Frontend with production settings
  frontend:
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # Python Diagnostics Service with production settings
  diagnostics:
    environment:
      - DB_PASSWORD=${POSTGRES_PASSWORD:-clpm_pwd}
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

volumes:
  postgres_data_prod:
    driver: local
  influxdb_data_prod:
    driver: local
